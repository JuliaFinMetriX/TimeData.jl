* What? Why?

The goal of the package TimeData is to provide fast, robust and
convenient representation of time series data. This shall be achieved
through introduction of several new composite types that match the
characteristics of various types of time series data more closely.

#+BEGIN_SRC julia 
a = [1 2 3]
#+END_SRC

#+RESULTS:
| 1 | 2 | 3 |

Main points:
(- alternative: Dates as first column of DataFrame)
- dates are treated more separate from actual values
  - more robust (user can not mess up first column)
  - more convenient (mean(tn) instead of mean(df[:, 2:end])) 
  - function overloading
    - allow suitable plotting methods
  - greater modularity
    - models will return simulated data without dates
      - evaluating portfolio returns should be robust to both real
        data with dates and simulated data without dates
  - performance: only numeric data, fastest and most specialized
    methods (no NA checking)

* Behaviour and examples
As DataFrame most likely will become the most important type in data
analysis, Timedata types should behave as similar to DataFrames as
possible. Hence, behaviour should be inherited with only few
exceptions. 

intuitive handling: emulate behavior of popular DataFrames

* Under the hood: inheritance
In object oriented programming, this is possible through
classes: subclasses will automatically inherit the behaviour of
superclasses. 

This kind of inheritance can easily be emulated in Julia through
types, although composite types generally are not allowed to be
supertypes (only abstract types have subtypes). One simply needs to
define a new composite type which owns a field of the respective
"supertype", and delegate all functionality that should be inherited
to this field. 

